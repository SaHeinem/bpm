/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RestaurantsRouteImport } from './routes/restaurants'
import { Route as PeopleRouteImport } from './routes/people'
import { Route as EmailsRouteImport } from './routes/emails'
import { Route as AssignmentsRouteImport } from './routes/assignments'
import { Route as ActivityRouteImport } from './routes/activity'
import { Route as IndexRouteImport } from './routes/index'

const RestaurantsRoute = RestaurantsRouteImport.update({
  id: '/restaurants',
  path: '/restaurants',
  getParentRoute: () => rootRouteImport,
} as any)
const PeopleRoute = PeopleRouteImport.update({
  id: '/people',
  path: '/people',
  getParentRoute: () => rootRouteImport,
} as any)
const EmailsRoute = EmailsRouteImport.update({
  id: '/emails',
  path: '/emails',
  getParentRoute: () => rootRouteImport,
} as any)
const AssignmentsRoute = AssignmentsRouteImport.update({
  id: '/assignments',
  path: '/assignments',
  getParentRoute: () => rootRouteImport,
} as any)
const ActivityRoute = ActivityRouteImport.update({
  id: '/activity',
  path: '/activity',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activity': typeof ActivityRoute
  '/assignments': typeof AssignmentsRoute
  '/emails': typeof EmailsRoute
  '/people': typeof PeopleRoute
  '/restaurants': typeof RestaurantsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activity': typeof ActivityRoute
  '/assignments': typeof AssignmentsRoute
  '/emails': typeof EmailsRoute
  '/people': typeof PeopleRoute
  '/restaurants': typeof RestaurantsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/activity': typeof ActivityRoute
  '/assignments': typeof AssignmentsRoute
  '/emails': typeof EmailsRoute
  '/people': typeof PeopleRoute
  '/restaurants': typeof RestaurantsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/activity'
    | '/assignments'
    | '/emails'
    | '/people'
    | '/restaurants'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/activity'
    | '/assignments'
    | '/emails'
    | '/people'
    | '/restaurants'
  id:
    | '__root__'
    | '/'
    | '/activity'
    | '/assignments'
    | '/emails'
    | '/people'
    | '/restaurants'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActivityRoute: typeof ActivityRoute
  AssignmentsRoute: typeof AssignmentsRoute
  EmailsRoute: typeof EmailsRoute
  PeopleRoute: typeof PeopleRoute
  RestaurantsRoute: typeof RestaurantsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/restaurants': {
      id: '/restaurants'
      path: '/restaurants'
      fullPath: '/restaurants'
      preLoaderRoute: typeof RestaurantsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/people': {
      id: '/people'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof PeopleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/emails': {
      id: '/emails'
      path: '/emails'
      fullPath: '/emails'
      preLoaderRoute: typeof EmailsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assignments': {
      id: '/assignments'
      path: '/assignments'
      fullPath: '/assignments'
      preLoaderRoute: typeof AssignmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/activity': {
      id: '/activity'
      path: '/activity'
      fullPath: '/activity'
      preLoaderRoute: typeof ActivityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActivityRoute: ActivityRoute,
  AssignmentsRoute: AssignmentsRoute,
  EmailsRoute: EmailsRoute,
  PeopleRoute: PeopleRoute,
  RestaurantsRoute: RestaurantsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
